<!DOCTYPE html>
<html lang="<%= @lang %>">
  <head prefix="og: https://ogp.me/ns#">
    <title><%= yield (:title) %> - Aim</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= yield :meta_tags %>

    <!-- 多言語・hreflangタグ -->
    <link rel="alternate" hreflang="ja" href="https://www.aim-get.com<%= request.path %>">
    <link rel="alternate" hreflang="en" href="https://www.aim-get.com<%= request.path %>">
    <link rel="alternate" hreflang="zh-CN" href="https://www.aim-get.com<%= request.path %>">
    <link rel="alternate" hreflang="x-default" href="https://www.aim-get.com<%= request.path %>">

    <meta property="og:url" content="https://aim-get.com">
    <meta property="og:type" content="website">
    <meta property="og:title" content="Aim">
    <meta property="og:description" content="こAim目的発見サービスです。">
    <meta property="og:site_name" content="Aim">
    <meta property="og:image" content="https://aim-get.com/Logo.png">

    <meta name="twitter:card" content="summary">
    <meta name="twitter:site" content="@RollTall">
    <meta name="twitter:description" content="Aim目的発見サービス" />
    <meta name="twitter:image" content="https://aim-get.com/Logo.png" />

    <!--fontawesomeキット読込-->
    <script async src="https://kit.fontawesome.com/95bdc402cd.js" crossorigin="anonymous"></script>

    <!-- <%= favicon_link_tag 'favicon.ico' %> -->
    <%= cloudfront_favicon_link_tag 'favicon.ico' %>
    
    <!-- Bootstrap CSS -->
    <link rel="preload" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous" as="style" onload="this.rel='stylesheet'">
    <link rel="preload" href="https://use.fontawesome.com/releases/v5.4.2/css/all.css" integrity="sha384-/rXc/GQVaYpyDdyxK+ecHPVYJSN9bmVFBvjA/9eOB+pb3F2w2N6fc5qB9Ew5yIns" crossorigin="anonymous" as="style" onload="this.rel='stylesheet'">
  

    <%= stylesheet_link_tag "header" %>
    <%= stylesheet_link_tag "side-menu" %>
    <%= stylesheet_link_tag "side-ads" %>
    <%= stylesheet_link_tag "color-dark-light" %>

    <%= stylesheet_link_tag 'application' %> 
    <%= javascript_pack_tag 'application' %>

    <!-- Google アナリティクスtag (gtag.js) --> <script async src="https://www.googletagmanager.com/gtag/js?id=G-KJYSMQ091V"></script> <script> window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'G-KJYSMQ091V'); </script>
    
    <link rel="preload" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"  as="style" onload="this.rel='stylesheet'"/>
    <!-- Google tag (gtag.js) --><script async src="https://www.googletagmanager.com/gtag/js?id=G-LPEYP3Q3WT"></script>

    <!--通知のPushCode-->
    <!--<script defer src="https://www.pushcode.jp/dist/js/pushcode.js"></script>
    <link rel="manifest" href="/manifest.json">
    -->

    <!-- 広告のTheMoneytizerのCMP（Cookie同意バナー）設置-->
    <!-- Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->
    <!--<script type="text/javascript" async=true src="Moneytizer_CMP.js"></script>-->
    <!-- End Quantcast Choice. Consent Manager Tag v2.0 (for TCF 2.0) -->

<!-- js-cookie読込-->
    <script async  src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/3.0.5/js.cookie.min.js"></script>

    <!-- jQuery と Bootstrap 読込-->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script async src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
<script async src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>


<script>
/*
window.PushCodeInit = function() {
  try {
    if (PushCode && PushCode.isSupport()) {
      PushCode.init({ domainToken: 'b9d13fd35759e6d49f4384be5657c5ce33e3eb0f3b921ea99ff04eb9351e1306', userid: '' });
        PushCode.components.openSubscribeDialog();
    }
  }
  catch (err) {
    console.error(err);
    if (PushCode) {
      PushCode.sendError(err);
    }
  }
};
*/
</script>
    </head>

  <body class="light-mode">
  
  <%= yield %>
<!--10/18ケシ
<main>
    <% flash.each do |key, value| %>
      <div class="flash <%= key %>">
        <%= value %>
      </div>
    <% end %>
    <%= yield %>
</main>
-->



<script>
/*10/18ケシ
// ローカルストレージから値を取得
  const theme = localStorage.getItem('theme');
  const stretch = localStorage.getItem('stretch');
  console.log("theme:"+theme)
  if(!theme){//値がセットされてない初期
    theme='light';
    setTheme(theme);
    localStorage.setItem('theme', theme);
  }

  if(theme=="dark"){$(".Logo-black").hide();$(".Logo-white").show();}else if(theme=="light"){$(".Logo-black").show();$(".Logo-white").hide();}


  //ダーク-ライトモードここから
  // 初期テーマの設定
  setTheme(theme);

  // テーマを切り替える関数
  function toggleTheme() {
    const currentTheme = document.body.classList.contains('dark-mode') ? 'dark' : 'light';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

    if(newTheme=="dark"){$(".Logo-black").hide();$(".Logo-white").show();}else if(newTheme=="light"){$(".Logo-black").show();$(".Logo-white").hide();}

    setTheme(newTheme);
    localStorage.setItem('theme', newTheme);
  }

  // テーマに応じてスタイルを設定する関数
  function setTheme(theme) {
    document.body.className = theme + '-mode';
  }
  //ダーク-ライトモードここまで

  //スマホ用のハンバーガーアイコンのクリックで再度メニュを開閉
document.querySelector('.mobile-menu-icon').addEventListener('click', function() {
  var leftMenu = $(".Left");
  if (leftMenu.css("display") === "none") {
    leftMenu.css("display", "block");
  } else {
    leftMenu.css("display", "none");
  }
});


$(function(){
	$(".Logo , .LogoTitle").click(function() {//セレクタorでどっちかにマッチ
		location.href="/";
	});
});


//こっからヘッダーの処理
$(function(){

// 要素を取得
const toggleArrow = document.getElementById("arrow");

const dropdownBtn_user_icon = document.getElementById("header-user-icon-btn");
const dropdownMenu_user_icon = document.getElementById("dropdown-user-icon");
// Toggle dropdown function
const toggleDropdown_user_icon = function () {
  dropdownMenu_user_icon.classList.toggle("show");
  //toggleArrow.classList.toggle("arrow");
};
// Toggle dropdown open/close when dropdown button is clicked
dropdownBtn_user_icon.addEventListener("click", function (e) {
  e.stopPropagation();
  toggleDropdown_user_icon();
  dropdownMenu_notifications.style.zIndex = -1;
  dropdownMenu_user_icon.style.zIndex = 10000;
});
// Close dropdown when dom element is clicked
document.documentElement.addEventListener("click", function () {
  if (dropdownMenu_user_icon.classList.contains("show")) {
    toggleDropdown_user_icon();

  }
});


const dropdownBtn_notifications = document.getElementById("notifications-button");
const dropdownMenu_notifications = document.getElementById("dropdown-notifications");
// Toggle dropdown function
const toggleDropdown_notifications = function () {
  dropdownMenu_notifications.classList.toggle("show");
  //toggleArrow.classList.toggle("arrow");
};
// Toggle dropdown open/close when dropdown button is clicked
dropdownBtn_notifications.addEventListener("click", function (e) {
  e.stopPropagation();
  toggleDropdown_notifications();
  dropdownMenu_user_icon.style.zIndex = -1;
  dropdownMenu_notifications.style.zIndex = 10000;

  javascript:notification_check_form.submit()//通知を既読にする
  document.querySelector('.badge').style.display = 'none';//通知バッジを非表示
  

});
// Close dropdown when dom element is clicked
document.documentElement.addEventListener("click", function () {
  if (dropdownMenu_notifications.classList.contains("show")) {
    toggleDropdown_notifications();
  }
});

});

/*
//ログアウト
const logout_btn = document.getElementById("logout-btn");
logout_btn.addEventListener("click", function (e) {
  fetch('/logout', {
    method: 'POST', 
  })
  .then((response) => {
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return response.json();
  })
  .then((data) => {
    console.log('Success:', data);
  })
  .catch((error) => {
    console.error('Error:', error);
  });
});

*/

//こっからヘッダーの処理ここまで
</script>

</body>
</html>